/////////////////////////////////
///PROGRAMME PRINCIPAL / MENU///
///////////////////////////////

//Ce sous-programme comporte le menu qui est appelé par le main (et le seul), et il appelle lui même les autres
//sous-programme nécessaires en fonctions des choix de l'utilisateur


//-----------------------------------------------------------------------------------------------------------------//
///Bibliothèques///
#include "header.h"


/*
* AUTEUR : NAYA 
* Nom : MenuPrincipal
* Input : //
* Output : //
* Role : Menu principal du jeu
*/
void MenuPrincipal()
{
    t_jeuDofus* jeuDofus = NULL;
    int eviteRebondSouris = (mouse_b & 1 ? 1 : 0);
    jeuDofus = (t_jeuDofus *)malloc(sizeof(t_jeuDofus));
    if(jeuDofus==NULL)
        printf("Erreur lors de l'initialisation de la structure de jeu \n");
    ///AFFICHAGE ECRAN ACCUEIL

    //Déclarations variables
    int quitter=0;

    //initialisation allegro mis dans un sous-programme
    initialisation_allegro();

    // BITMAP servant de buffer d'affichage (double buffer)
    BITMAP *buffer;

    // initialisation d'entree.
    BITMAP *imentrer;

    // initialisation de l'écran du menu
    BITMAP *menu;

    //Image de séléction du nombre de joueur
    BITMAP *imjoueur;

    //téléchargement des polices
    FONT *police = NULL; /// Initialisation Polices
    police = load_font("police.pcx",NULL,NULL);
    if(!police)
        allegro_message("Erreur chargement police");


    // CREATION DU BUFFER D'AFFICHAGE à la taille de l'écran
    buffer = create_bitmap(SCREEN_W, SCREEN_H);
    if (buffer == NULL) // on verifie que l'image a bien été chargée au cas où.
    {
        allegro_message("pb creation buffer...");
        allegro_exit();
        exit(EXIT_FAILURE);
    }
    clear_bitmap(buffer);


    /// décalaration et initialisation de l'image.
    imentrer=load_bitmap("entrer.bmp",NULL);
    // on verifie que l'image a bien été chargée au cas où.
    if(!imentrer)
    {
        allegro_message("pas pu entrer.bmp");
        allegro_exit();
        exit(EXIT_FAILURE);
    }

    imjoueur = create_bitmap(SCREEN_W, SCREEN_H);
    imjoueur=load_bitmap("nbjoueur.bmp",NULL);
    // on verifie que l'image a bien été chargée au cas où.
    if (!imjoueur)
    {
        allegro_message("pas pu imjoueur.bmp");
        allegro_exit();
        exit(EXIT_FAILURE);
    }

    menu=load_bitmap("menu.bmp",NULL);
    // on verifie que l'image a bien été chargée au cas où.
    if(!menu)
    {
        allegro_message("pas pu entrer.bmp");
        allegro_exit();
        exit(EXIT_FAILURE);
    }

    ///Boucle de jeu

    do
    {
        clear_bitmap(buffer);

        // afficher coordonnées de la souris (%4d = format numérique largeur fixe sur 4 caractères)
        textprintf_ex(screen,font,60,300,makecol(255,255,255),makecol(0,0,0),"%4d %4d",mouse_x,mouse_y);

        //Affichage image d'entrée sur buffer
        blit(imentrer, buffer, 0, 0,(SCREEN_W-imentrer->w)/2, (SCREEN_H-imentrer->h)/2, imentrer->w, imentrer->h);
        //affichage entrer sur buffer
        textout_ex(buffer, police, "ENTRER",SCREEN_W-555, SCREEN_H-130, makecol(191, 142, 12), -1);
        if(mouse_x>=413 && mouse_x <=578 && mouse_y >= 449 && mouse_y <= 512)      //Si on passe la souris sur la touche elle change de couleur
        {
            textout_ex(buffer, police, "ENTRER",SCREEN_W-555, SCREEN_H-130, makecol(0, 147, 0), -1);
        }
        if(mouse_b & 1 && eviteRebondSouris == 0 && mouse_x>=413 && mouse_x <=578 && mouse_y >= 449 && mouse_y <= 512)
        {
            eviteRebondSouris=1;
            quitter=1;
        }

        //Affichage du buffer sur l'écran
        blit(buffer, screen, 0, 0, 0, 0, SCREEN_W, SCREEN_H);
        if(!(mouse_b & 1))
            eviteRebondSouris = 0;

    }
    while(quitter!=1);

    quitter=0;

    do
    {
        clear_bitmap(buffer);

        /// Afficher coordonnées de la souris (%4d = format numérique largeur fixe sur 4 caractères)
        textprintf_ex(screen,font,60,300,makecol(255,255,255),makecol(0,0,0),"%4d %4d",mouse_x,mouse_y);

        ///Affichage de l'image du menu sur le buffer
        blit(menu, buffer, 0, 0,(SCREEN_W-imentrer->w)/2, (SCREEN_H-imentrer->h)/2, imentrer->w, imentrer->h);

        ///NOUVELLE PARTIE
        textout_ex(buffer, police, "NOUVELLE",435, 325, makecol(191, 142, 12), -1);
        textout_ex(buffer, police, "PARTIE",452, 355, makecol(191, 142, 12), -1);
        if(mouse_x>=362 && mouse_x <=634 && mouse_y >= 277 && mouse_y <= 412)          //Si on passe la souris sur la touche elle change de couleur
        {
            textout_ex(buffer, police, "NOUVELLE",435, 325, makecol(255, 255, 255), -1);
            textout_ex(buffer, police, "PARTIE",452, 355, makecol(255, 255, 255), -1);
            if(mouse_b & 1 && eviteRebondSouris==0)
            {
                eviteRebondSouris=1;
                nouvellePartie(jeuDofus);
            }
        }

        ///SAUVEGARDE
        textout_ex(buffer, police, "Sauvegarder",85, 325, makecol(191, 142, 12), -1);
        textout_ex(buffer, police, "la partie",97, 355, makecol(191, 142, 12), -1);
        if (mouse_x>=39 && mouse_x <=311 && mouse_y >= 276 && mouse_y <= 412)       //Si on passe la souris sur la touche elle change de couleur
        {
            textout_ex(buffer, police, "Sauvegarder",85, 325, makecol(255, 255, 255), -1);
            textout_ex(buffer, police, "la partie",97, 355, makecol(255, 255, 255), -1);
            if(mouse_b & 1 && eviteRebondSouris==0)
            {
                eviteRebondSouris=1;
                //sauvegarder_partie();

            }
        }



        ///CHARGER PARTIE
        textout_ex(buffer, police, "Charger partie",710, 325, makecol(191, 142, 12), -1);
        textout_ex(buffer, police, "en cours",758, 355, makecol(191, 142, 12), -1);
        if (mouse_x>=689 && mouse_x <=963 && mouse_y >= 276 && mouse_y <= 412)              //Si on passe la souris sur la touche elle change de couleur
        {
            textout_ex(buffer, police, "Charger partie",710, 325, makecol(255, 255, 255), -1);
            textout_ex(buffer, police, "en cours",758, 355, makecol(255, 255, 255), -1);
            if(mouse_b & 1 && eviteRebondSouris==0)
            {
                eviteRebondSouris=1;
                allegro_message("Vous etes dans chargement partie");
            }
        }

        ///REGLES DU JEU
        textout_ex(buffer, police, "AIDE",307, 498, makecol(191, 142, 12), -1);
        if (mouse_x>=258 && mouse_x <=424 && mouse_y >= 469 && mouse_y <= 549)          //Si on passe la souris sur la touche elle change de couleur
        {
            textout_ex(buffer, police, "AIDE",307, 498, makecol(255, 255, 255), -1);
            if(mouse_b & 1 && eviteRebondSouris==0)
            {
                eviteRebondSouris=1;
                regles_jeu(buffer);

            }

        }

        ///CREATEURS
        textout_ex(buffer, police, "Createurs",425, 138, makecol(191, 142, 12), -1);
        if (mouse_x>=411 && mouse_x <=588 && mouse_y >= 108 && mouse_y <= 197)      //Si on passe la souris sur la touche elle change de couleur
        {
            textout_ex(buffer, police, "Createurs",425, 138, makecol(255, 255, 255), -1);
            if(mouse_b & 1 && eviteRebondSouris==0)
            {
                eviteRebondSouris=1;
                allegro_message("Vous etes dans créateurs");
            }
        }

        ///QUITTER
        textout_ex(buffer, police, "QUITTER",605, 498, makecol(191, 142, 12), -1);
        if (mouse_x>=574 && mouse_x <=742 && mouse_y >= 469 && mouse_y <= 549)      //Si on passe la souris sur la touche elle change de couleur
        {
            textout_ex(buffer, police, "QUITTER",605, 498, makecol(255, 255, 255), -1);
            if(mouse_b & 1 && eviteRebondSouris==0)
            {
                eviteRebondSouris=1;
                allegro_message("Vous etes dans quitter");


            }
        }
        ///Affichage du buffer sur l'écran
        blit(buffer, screen, 0, 0, 0, 0, SCREEN_W, SCREEN_H);

        if(!(mouse_b & 1))
            eviteRebondSouris = 0;

    }
    while(quitter!=1);


    destroy_bitmap(buffer);
    destroy_bitmap(imentrer);
    destroy_bitmap(menu);
    destroy_bitmap(imjoueur);
    //destroy_bitmap(police);
}

/*
* AUTEUR : BIANCA et NAYA 
* Nom : regles_jeu
* Input : BITMAP *buffer
* Output : //
* Role : affichage des regles
*/
void regles_jeu(BITMAP *buffer)
{

    int quitter=0;
    int retour=0;
    BITMAP *regles;
    // création du double buffer.
    regles = create_bitmap(SCREEN_W, SCREEN_H);

    // décalaration et initialisation de l'image.
    regles =load_bitmap("imregles.bmp",NULL);

    // on verifie que l'image a bien été chargée au cas où.
    if (!regles)
    {
        allegro_message("pas pu imregles.bmp");
        allegro_exit();
        exit(EXIT_FAILURE);
    }
    clear_bitmap(buffer);

    while(!key[KEY_ESC])
    {
        blit(regles, buffer, 0, 0,(SCREEN_W-regles->w)/2, (SCREEN_H-regles->h)/2, regles->w, regles->h);

        // afficher coordonnées de la souris (%4d = format numérique largeur fixe sur 4 caractères)
        textprintf_ex(screen,font,60,300,makecol(255,255,255),makecol(0,0,0),"%4d %4d",mouse_x,mouse_y);


        textprintf_ex(buffer,font,52,33,makecol(0,0,0), -1,"MENU");



        if (mouse_x>=37 && mouse_x <=168 && mouse_y >= 12 && mouse_y <= 58)              //Si on passe la souris sur la touche elle change de couleur
        {
            textprintf_ex(buffer,font,52,33,makecol(0,147,0), -1,"MENU");
            if (mouse_b & 1)
            {
                retour=1;
                MenuPrincipal(buffer);

            }

        }
        blit(buffer, screen, 0, 0, 0, 0, SCREEN_W, SCREEN_H);





    }

    destroy_bitmap(regles);


}


//-----------------------------------------------------------------------------------------------------------------//
